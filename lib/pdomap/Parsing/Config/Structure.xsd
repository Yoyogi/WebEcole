<?xml version="1.0" encoding="UTF-8"?>
<xsd:schema
    xmlns:xsd="http://www.w3.org/2001/XMLSchema">

  <!-- Root tag structure -->
  <xsd:element name="pdomap">
    <xsd:complexType>
      <xsd:sequence>
        <!-- Configure the database -->
        <xsd:element name="database"
            minOccurs="0" maxOccurs="1">
          <xsd:complexType>
            <xsd:sequence>
              <!-- define the database adapters list -->
              <xsd:element name="adapter" type="DatabaseAdapterType"
                  minOccurs="1" maxOccurs="unbounded" />
            </xsd:sequence>
          </xsd:complexType>
        </xsd:element>
        <!-- Configure the fields list -->
        <xsd:element name="fields"
            minOccurs="0" maxOccurs="1">
          <xsd:complexType>
            <!-- TAGS -->
            <xsd:sequence>
              <!-- define the fields list -->
              <xsd:element name="field" type="FieldAdapterType"
                  minOccurs="1" maxOccurs="unbounded" />
            </xsd:sequence>
          </xsd:complexType>
        </xsd:element>
        <!-- Configure database connections -->
        <xsd:element name="connections"
            minOccurs="0" maxOccurs="1">
          <xsd:complexType>
            <xsd:sequence>
              <!-- List of database connexions -->
              <xsd:element name="add" type="ConnectionType"
                  minOccurs="0" maxOccurs="unbounded" />
            </xsd:sequence>
          </xsd:complexType>
        </xsd:element>
        <!-- Configure mapping files -->
        <xsd:element name="mapping" 
            minOccurs="0" maxOccurs="unbounded">
          <xsd:complexType>
            <!-- Tags -->
            <xsd:sequence>
              <xsd:element name="adapter" type="AdapterType"
                  minOccurs="0" maxOccurs="unbounded" />
            </xsd:sequence>
            <!-- 
                Define the root directory for mapping files
            -->
            <xsd:attribute
                name="root"
                type="xsd:string" />
          </xsd:complexType>
        </xsd:element>        
        <!-- Configure caching adapters -->
        <xsd:element name="cache" minOccurs="0" maxOccurs="1">
          <xsd:complexType>
            <!-- Tags -->
            <xsd:sequence>
                <xsd:element name="params"
                      minOccurs="0" maxOccurs="1">
                    <xsd:complexType>
                      <!-- TAGS -->
                      <xsd:sequence>
                        <!-- 
                            Define the cache configuration as pair 
                            of key/value
                        -->
                        <xsd:element name="param" type="ParamType"
                            minOccurs="1" maxOccurs="unbounded" />
                      </xsd:sequence>
                    </xsd:complexType>
                  </xsd:element>
                <xsd:element name="adapter" type="CacheAdapterType"
                  minOccurs="0" maxOccurs="unbounded" />
            </xsd:sequence>
            <!-- 
                Define the default cache adapter
                Use '*' to load adapter dynamically depending on
                server configuration
            -->
            <xsd:attribute
                name="use"
                type="xsd:string"
                use="required" />
          </xsd:complexType>
        </xsd:element>
      </xsd:sequence>
    </xsd:complexType>
  </xsd:element>

  <!-- Defines the cache adapter tag -->
  <xsd:complexType name="CacheAdapterType">
    <!-- TAGS -->
    <xsd:sequence>
      <xsd:element name="check" type="CheckConstraint"
          minOccurs="0" maxOccurs="unbounded" />
      <!-- 
        Automatically include some PHP containing 
        inherited class for example 
      -->
      <xsd:element name="params"
          minOccurs="0" maxOccurs="1">
        <xsd:complexType>
          <!-- TAGS -->
          <xsd:sequence>
            <!-- 
                Define the field configuration as pair of key/value
            -->
            <xsd:element name="param" type="ParamType"
                minOccurs="1" maxOccurs="unbounded" />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
    </xsd:sequence>
    <!-- Adapter name -->
    <xsd:attribute name="name" type="xsd:string" use="required" />
    <!-- Adapter path, if not defined will look in root path -->
    <xsd:attribute name="enabled" type="xsd:boolean" />
  </xsd:complexType>
  
  <!-- Defines the mapping/adapter tag -->
  <xsd:complexType name="AdapterType">
    <!-- TAGS -->
    <xsd:sequence>
      <!-- 
                Automatically include some PHP containing 
                inherited class for example 
            -->
      <xsd:element name="require" type="xsd:string"
          minOccurs="0" maxOccurs="unbounded" />
    </xsd:sequence>
    <!-- Adapter name -->
    <xsd:attribute name="name" type="xsd:string" use="required" />
    <!-- Adapter meta, if not defined will use the name + .map.xml -->
    <xsd:attribute name="meta" type="xsd:string" />
  </xsd:complexType>
  

  <!-- Define the connection tag -->
  <xsd:complexType name="ConnectionType">
    <!-- 
            Define the connection key 
            (default if not set, or set '*')
        -->
    <xsd:attribute
        name="key"
        type="xsd:string"  />
    <!-- 
            Connection dsn with syntax : 
            {adapter}:host={host};dbname={database}    
        -->
    <xsd:attribute
        name="dsn"
        type="xsd:string"
        use="required" />
    <!-- User name -->
    <xsd:attribute
        name="user"
        type="xsd:string"
        use="required" />
    <!-- Password -->
    <xsd:attribute
        name="pwd"
        type="xsd:string"
        use="required" />
    <!-- Tables prefix -->
    <xsd:attribute
        name="prefix"
        type="xsd:string" />
  </xsd:complexType>

  <!-- Defines adapters configuration -->
  <xsd:complexType name="DatabaseAdapterType">
    <!-- TAGS -->
    <xsd:sequence>
      <!-- 
                Define system constraints for validating 
                if adapter can be used 
            -->
      <xsd:element name="check" type="CheckConstraint"
          minOccurs="0" maxOccurs="unbounded" />
    </xsd:sequence>
    <!-- 
            (optional) Defines if adapter is enabled or not 
            If not defined the adapter is considered as enabled
        -->
    <xsd:attribute
        name="enabled"
        type="xsd:string" />
    <!-- 
            Adapter name
            (define the same name as directory) 
        -->
    <xsd:attribute
        name="name"
        type="xsd:string"
        use="required" />
    <!-- 
            (optional) DNS Adapter Type
            If not defined user the lower adapter name string
            Define the type in lower case
            Use the same adapter type as declared in dns connection tag
        -->
    <xsd:attribute
        name="type"
        type="xsd:string" />
  </xsd:complexType>

  <!-- Check constraints on system -->
  <xsd:complexType name="CheckConstraint">
    <!-- 
            Check if adapter type equals
        -->
    <xsd:attribute
        name="type"
        type="xsd:string" />
    <!--
            Check if defined php module is loaded
        -->
    <xsd:attribute
        name="module"
        type="xsd:string" />
    <!--
            Check if function is declared
        -->
    <xsd:attribute
        name="function"
        type="xsd:string" />
    <!--
            Check if class is declared
        -->
    <xsd:attribute
        name="class"
        type="xsd:string" />
  </xsd:complexType>

  <!-- Defines fields configuration -->
  <xsd:complexType name="FieldAdapterType">
    <!-- TAGS -->
    <xsd:sequence>
      <!-- 
                Define the field configuration as pair of key/value
            -->
      <xsd:element name="param" type="ParamType"
          minOccurs="0" maxOccurs="unbounded" />
    </xsd:sequence>
    <!-- 
            (optional) Defines if field is enabled or not 
            If not defined the field is considered as enabled
        -->
    <xsd:attribute
        name="enabled"
        type="xsd:string" />
    <!-- 
            Field name
            (define the same name as xml type declarations) 
        -->
    <xsd:attribute
        name="name"
        type="xsd:string"
        use="required" />
  </xsd:complexType>

  <!-- Defines fields configuration -->
  <xsd:complexType name="ParamType">
    <!-- 
            Parameter name
        -->
    <xsd:attribute
        name="name"
        type="xsd:string"
        use="required" />
    <!-- 
            Parameter value
        -->
    <xsd:attribute
        name="value"
        type="xsd:string"
        use="required" />
  </xsd:complexType>

</xsd:schema>