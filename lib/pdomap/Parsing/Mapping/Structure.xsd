<?xml version="1.0" encoding="utf-8" ?>
<!--Created with Liquid XML Studio Developer Edition (Trial) 8.0.9.2074 (http://www.liquid-technologies.com)-->
<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema">
	<xs:simpleType name="orderEnum">
		<xs:restriction base="xs:string">
			<xs:enumeration value="asc" />
			<xs:enumeration value="desc" />
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="operatorEnum">
		<xs:restriction base="xs:string">
			<xs:enumeration value="and" />
			<xs:enumeration value="or" />
		</xs:restriction>
	</xs:simpleType>
	<!-- 
        Define default values enumerations dynamically
    -->
	<xs:simpleType name="adapterNames">
		<xs:restriction base="xs:string" />
	</xs:simpleType>
	<!-- Fields types -->
	<xs:simpleType name="fieldTypes">
		<xs:restriction base="xs:string" />
	</xs:simpleType>
	<!-- Database connection keys -->
	<xs:simpleType name="connectionKeys">
		<xs:restriction base="xs:string" />
	</xs:simpleType>
	<!-- All system declared classes -->
	<xs:simpleType name="declaredClasses">
		<xs:restriction base="xs:string" />
	</xs:simpleType>
	<!-- All system declared interfaces -->
	<xs:simpleType name="declaredInterfaces">
		<xs:restriction base="xs:string" />
	</xs:simpleType>
	<xs:simpleType name="pdoMapFunctions">
		<xs:restriction base="xs:string">
			<xs:enumeration value="md5" />
			<xs:enumeration value="now" />
			<xs:enumeration value="ucase" />
			<xs:enumeration value="lcase" />
			<xs:enumeration value="ucfirst" />
			<xs:enumeration value="trim" />
			<xs:enumeration value="utf8-decode" />
			<xs:enumeration value="utf8-encode" />
		</xs:restriction>
	</xs:simpleType>
	<!-- File tag structure -->
	<xs:element name="pdomap">
		<xs:complexType>
			<!-- TAGS -->
			<xs:sequence>
				<!-- Define the table fields -->
				<xs:element minOccurs="1" maxOccurs="unbounded" name="adapter" type="AdapterType" />
			</xs:sequence>
			<!-- The default database connection to use -->
			<xs:attribute name="use" type="connectionKeys" />
		</xs:complexType>
	</xs:element>
	<!-- Adapter tag structure -->
	<xs:complexType name="AdapterType">
		<!-- TAGS -->
		<xs:sequence>
			<!-- Simple list of fields (at least one) -->
			<xs:element minOccurs="1" maxOccurs="1" name="entity" type="EntityType" />
			<!-- The where default criterias -->
			<xs:element minOccurs="0" maxOccurs="1" name="where" type="WhereType" />
			<!-- Event triggers -->
			<xs:element minOccurs="0" maxOccurs="unbounded" name="triggers" type="AdapterTriggersType" />
			<!-- Requests -->
			<xs:choice minOccurs="0" maxOccurs="unbounded">
				<xs:element name="select" type="AdapterSelectType" />
				<xs:element name="select-one" type="AdapterSelectOneType" />
				<xs:element name="update" type="AdapterUpdateType" />
				<xs:element name="insert" type="AdapterInsertType" />
				<xs:element name="delete" type="AdapterDeleteType" />
				<xs:element name="transaction" type="AdapterTransactionType" />
			</xs:choice>
		</xs:sequence>
		<!-- The adapter name  -->
		<xs:attribute name="name" type="xs:string" use="required" />
		<!-- Interface name to use for implementation -->
		<xs:attribute name="implements" type="xs:string" />
		<!-- Class name to use if no interface defined -->
		<xs:attribute name="class" type="xs:string" />
		<!-- Friendly classname to use for generation -->
		<xs:attribute name="generate-as" type="xs:string" />
		<!-- Table name -->
		<xs:attribute name="table" type="xs:string" />
		<!-- Connection to use -->
		<xs:attribute name="use" type="connectionKeys" />
	</xs:complexType>
	<!-- Entity tag structure -->
	<xs:complexType name="EntityType">
		<!-- TAGS -->
		<xs:sequence>
			<!-- the properties array -->
			<xs:element minOccurs="1" maxOccurs="1" name="properties">
				<xs:complexType>
					<xs:choice minOccurs="0" maxOccurs="unbounded">
						<xs:element minOccurs="1" maxOccurs="1" name="primary" type="PropertyPrimaryType" />
						<xs:element minOccurs="0" maxOccurs="unbounded" name="foreign" type="PropertyForeignType" />
						<xs:element minOccurs="0" maxOccurs="unbounded" name="property" type="PropertyType" />
						<xs:element minOccurs="0" maxOccurs="unbounded" name="one-to-many" />
						<xs:element minOccurs="0" maxOccurs="unbounded" name="many-to-many" />
					</xs:choice>
				</xs:complexType>
			</xs:element>
			<!-- Event triggers -->
			<xs:element minOccurs="0" maxOccurs="1" name="triggers" type="EntityTriggersType" />
            <!-- Requests -->
			<xs:choice minOccurs="0" maxOccurs="unbounded">
    			<xs:element name="select" type="EntitySelectType" />
    			<xs:element name="select-one" type="EntitySelectOneType" />
    			<xs:element name="update" type="EntityUpdateType" />
    			<xs:element name="insert" type="EntityInsertType" />
    			<xs:element name="delete" type="EntityDeleteType" />
    			<xs:element name="transaction" type="EntityTransactionType" />			
            </xs:choice>
		</xs:sequence>
		<!-- Class name to load when unserialize an entity -->
		<xs:attribute name="class" type="declaredClasses" />
		<!-- Friendly classname to use for generation -->
		<xs:attribute name="generate-as" type="xs:string" />
	</xs:complexType>
	<xs:complexType name="AdapterTriggersType">
		<xs:complexContent>
			<xs:extension base="NamedRequest" />
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="AdapterSelectOneType">
		<xs:complexContent>
			<xs:extension base="NamedRequest">
				<xs:sequence>
					<xs:element minOccurs="0" maxOccurs="1" name="where" type="WhereType" />
					<xs:element minOccurs="0" maxOccurs="unbounded" name="order">
						<xs:complexType>
							<xs:attribute name="by" type="xs:string" use="required" />
							<xs:attribute default="asc" name="direction" type="orderEnum" />
						</xs:complexType>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="AdapterSelectType">
		<xs:complexContent>
			<xs:extension base="AdapterSelectOneType">
				<xs:choice>
					<xs:element minOccurs="0" maxOccurs="1" name="limit">
						<xs:complexType>
							<xs:attribute name="start" type="xs:int" />
							<xs:attribute name="size" type="xs:int" />
						</xs:complexType>
					</xs:element>
				</xs:choice>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="AdapterUpdateType">
		<xs:complexContent>
			<xs:extension base="EntityUpdateType">
				<xs:choice>
					<xs:element minOccurs="0" maxOccurs="1" name="where" type="WhereType" />
				</xs:choice>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="AdapterInsertType">
		<xs:complexContent>
			<xs:extension base="NamedRequest" />
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="AdapterDeleteType">
		<xs:complexContent>
			<xs:extension base="NamedRequest">
				<xs:choice minOccurs="1" maxOccurs="1">
					<xs:element minOccurs="0" maxOccurs="1" name="where" type="WhereType" />
					<xs:element minOccurs="0" maxOccurs="unbounded" name="order">
						<xs:complexType>
							<xs:attribute name="by" type="xs:string" use="required" />
							<xs:attribute default="asc" name="direction" type="orderEnum" />
						</xs:complexType>
					</xs:element>
					<xs:element minOccurs="0" maxOccurs="1" name="limit">
						<xs:complexType>
							<xs:attribute name="start" type="xs:int" />
							<xs:attribute name="size" type="xs:int" />
						</xs:complexType>
					</xs:element>
				</xs:choice>			
            </xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="AdapterTransactionType">
		<xs:complexContent>
			<xs:extension base="NamedRequest" />
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="PropertyPrimaryType">
		<xs:attribute name="name" type="xs:string" use="required" />
		<xs:attribute name="column" type="xs:string" use="optional" />
	</xs:complexType>
	<xs:complexType name="PropertyForeignType">
		<xs:complexContent>
			<xs:extension base="PropertyPrimaryType">
				<xs:attribute name="adapter" type="xs:string" use="required" />
				<xs:attribute name="null" type="xs:boolean" />
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="PropertyType">
		<xs:complexContent>
			<xs:extension base="PropertyPrimaryType">
				<xs:choice minOccurs="0" maxOccurs="unbounded">
					<xs:element name="value">
						<xs:complexType>
							<xs:simpleContent>
								<xs:extension base="xs:string">
									<xs:attribute name="key" type="xs:string" />
								</xs:extension>
							</xs:simpleContent>
						</xs:complexType>
					</xs:element>
				</xs:choice>
				<xs:attribute name="type" type="xs:string" use="required" />
				<xs:attribute name="indexed" type="xs:boolean" />
				<xs:attribute name="null" type="xs:boolean" />
				<xs:attribute name="size" type="xs:string" />
				<xs:attribute name="default" type="xs:string" />
				<xs:attribute name="formula" type="xs:string" />
				<xs:attribute name="unsigned" type="xs:boolean" />
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="EntityTriggersType" />
	<xs:complexType name="EntitySelectType">
		<xs:complexContent>
			<xs:extension base="EntitySelectOneType">
				<xs:choice>
					<xs:element minOccurs="0" maxOccurs="1" name="limit">
						<xs:complexType>
							<xs:attribute name="start" type="xs:int" />
							<xs:attribute name="size" type="xs:int" />
						</xs:complexType>
					</xs:element>
				</xs:choice>			
            </xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="EntitySelectOneType">
		<xs:complexContent>
			<xs:extension base="NamedRequest">
                <xs:sequence>
					<xs:element minOccurs="0" maxOccurs="1" name="where" type="WhereType" />
					<xs:element minOccurs="0" maxOccurs="unbounded" name="order">
						<xs:complexType>
							<xs:attribute name="by" type="xs:string" use="required" />
							<xs:attribute default="asc" name="direction" type="orderEnum" />
						</xs:complexType>
					</xs:element>
				</xs:sequence>		    
            </xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="EntityUpdateType">
		<xs:complexContent>
			<xs:extension base="NamedRequest">
				<xs:choice minOccurs="1" maxOccurs="unbounded">
					<xs:element name="set">
						<xs:complexType>
							<xs:attribute name="property" type="xs:string" use="required" />
							<xs:attribute name="value" type="xs:string" />
							<xs:attribute name="function" type="pdoMapFunctions" />
						</xs:complexType>
					</xs:element>
				</xs:choice>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="EntityInsertType">
		<xs:complexContent>
			<xs:extension base="NamedRequest">
	            <xs:sequence>
					<xs:element minOccurs="0" maxOccurs="unbounded" name="set">
						<xs:complexType>
							<xs:attribute name="property" type="xs:string" use="required" />
							<xs:attribute name="value" type="xs:string" />
							<xs:attribute name="function" type="xs:string" />
						</xs:complexType>
                    </xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="EntityDeleteType">
		<xs:complexContent>
			<xs:extension base="EntitySelectType" />
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="EntityTransactionType">
		<xs:complexContent>
			<xs:extension base="NamedRequest" />
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="NamedRequest" abstract="true">
		<xs:choice>
			<xs:element minOccurs="0" maxOccurs="1" name="params">
				<xs:complexType>
					<xs:sequence minOccurs="1" maxOccurs="unbounded">
						<xs:element minOccurs="1" maxOccurs="unbounded" name="param">
							<xs:complexType>
								<xs:attribute name="name" type="xs:string" use="required" />
								<xs:attribute name="default" type="xs:string" />
								<xs:attribute name="value" type="xs:string" />
							</xs:complexType>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
		</xs:choice>
		<xs:attribute name="name" type="xs:string" use="required" />
		<xs:attribute name="adapter" type="adapterNames" />
	</xs:complexType>
	<!-- Others tags -->
	<xs:complexType name="WhereType">
		<xs:choice minOccurs="1" maxOccurs="unbounded">
			<xs:element name="cond" type="WhereCondType" />
			<xs:element name="or" type="WhereCondRequest" />
			<xs:element name="and" type="WhereCondRequest" />
		</xs:choice>
		<xs:attribute name="operator" type="operatorEnum" />
	</xs:complexType>
	<xs:complexType name="WhereCondRequest">
		<xs:choice minOccurs="1" maxOccurs="unbounded">
			<xs:element name="cond" type="WhereCondType" />
			<xs:element name="or" type="WhereCondRequest" />
			<xs:element name="and" type="WhereCondRequest" />
		</xs:choice>
	</xs:complexType>
	<xs:complexType name="WhereCondType">
		<xs:attribute name="property" type="xs:string" use="required" />
		<xs:attribute name="equals" type="xs:string" />
		<xs:attribute name="is" type="xs:string" />
		<xs:attribute name="isnot" type="xs:string" />
		<xs:attribute name="equal" type="xs:string" />
		<xs:attribute name="like" type="xs:string" />
		<xs:attribute name="superior" type="xs:string" />
		<xs:attribute name="inferior" type="xs:string" />
		<xs:attribute name="not" type="xs:string" />
		<xs:attribute name="function" type="pdoMapFunctions" />
	</xs:complexType>
</xs:schema>
